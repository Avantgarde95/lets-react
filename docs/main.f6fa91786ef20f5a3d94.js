!function(){"use strict";var n,r={9320:function(n,r,e){var t=e(7294),o=e(3935);function a(n){var r=n.split(/\r?\n/),e=[{title:null,content:""}];return r.forEach((function(n){var r=function(n){var r=n.match(/^#[^#]/);if(null===r)return null;var e=r[0];return n.slice(e.length)}(n);null!==r?e.push({title:r,content:""}):e[e.length-1].content+=n+"\n"})),e}function c(n,r){return function(n){if(Array.isArray(n))return n}(n)||function(n,r){var e=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=e){var t,o,a=[],c=!0,s=!1;try{for(e=e.call(n);!(c=(t=e.next()).done)&&(a.push(t.value),!r||a.length!==r);c=!0);}catch(n){s=!0,o=n}finally{try{c||null==e.return||e.return()}finally{if(s)throw o}}return a}}(n,r)||function(n,r){if(n){if("string"==typeof n)return s(n,r);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?s(n,r):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(n,r){(null==r||r>n.length)&&(r=n.length);for(var e=0,t=new Array(r);e<r;e++)t[e]=n[e];return t}var i=(0,t.createContext)({}),l=function(n){var r=n.articles,e=n.children,o=c((0,t.useState)(0),2),a=o[0],s=o[1],l=c((0,t.useState)(null),2),u=l[0],p=l[1];return t.createElement(i.Provider,{value:{articles:r,articleIndex:a,sectionIndex:u,setArticleIndex:s,setSectionIndex:p}},e)};function u(n,r){(null==r||r>n.length)&&(r=n.length);for(var e=0,t=new Array(r);e<r;e++)t[e]=n[e];return t}var p=(0,t.createContext)({}),m=function(n){var r,e,o=n.children,a=(r=(0,t.useState)(!1),e=2,function(n){if(Array.isArray(n))return n}(r)||function(n,r){var e=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=e){var t,o,a=[],c=!0,s=!1;try{for(e=e.call(n);!(c=(t=e.next()).done)&&(a.push(t.value),!r||a.length!==r);c=!0);}catch(n){s=!0,o=n}finally{try{c||null==e.return||e.return()}finally{if(s)throw o}}return a}}(r,e)||function(n,r){if(n){if("string"==typeof n)return u(n,r);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?u(n,r):void 0}}(r,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=a[0],s=a[1];return t.createElement(p.Provider,{value:{isMenuOpen:c,openMenu:s}},o)},d=function(n){var r=n.index,e=n.section,o=(0,t.useContext)(i).setSectionIndex;return t.createElement("div",{className:"SectionItem",onClick:function(){o(r)}},e.title)},f=function(n){var r=n.article,e=n.isSelected,o=n.onClick;return t.createElement("div",{className:"ArticleItem"},t.createElement("div",{className:"Button ".concat(e?"selected":""),onClick:o},r.title),e&&t.createElement("div",{className:"Dropdown"},r.sections.map((function(n,r){return null!==n.title&&t.createElement(d,{key:r,index:r,section:n})}))))},v=function(){var n=(0,t.useContext)(i),r=n.articles,e=n.articleIndex,o=n.setArticleIndex,a=(0,t.useContext)(p).isMenuOpen;return t.createElement("div",{className:"Menu ".concat(a?"open":"")},r.map((function(n,r){return t.createElement(f,{key:r,article:n,isSelected:r===e,onClick:function(){o(r)}})})))},b=e(8456),h=e.n(b),g=e(9657),y=e(5376),x=e(5046),S=e(7852),j=e(6993),w=e(2422),k=e(8272);g.Z.registerLanguage("jsx",y.Z),g.Z.registerLanguage("tsx",x.Z),g.Z.registerLanguage("json",S.Z),g.Z.registerLanguage("html",j.Z),g.Z.registerLanguage("css",w.Z);var E={code:function(n){var r=n.inline,e=n.className,o=n.children,a=void 0!==e&&e.startsWith("language-");if(r)return t.createElement("code",{className:e},o);if(a){var c=function(n){var r=n.toLowerCase();switch(r){case"javascript":return"jsx";case"typescript":return"tsx";case"jsonc":return"json";default:return r}}(e.substring(9));return t.createElement(g.Z,{language:c,style:k.Z},String(o).trimRight())}return t.createElement(g.Z,{style:k.Z},String(o).trimRight())},a:function(n){var r=n.href,e=n.children;return t.createElement("a",{target:"_blank",rel:"noopenner noreferrer",href:r},e)},img:function(n){var r=n.src,e=n.alt,o=n.children;return t.createElement("div",{className:"Image"},t.createElement("img",{src:r,alt:e},o))}},C=function(n){var r=n.content;return t.createElement(h(),{components:E},r)},A=function(n){var r=n.index,e=n.section,o=(0,t.useContext)(i),a=o.sectionIndex,c=o.setSectionIndex,s=(0,t.useRef)(null);return(0,t.useEffect)((function(){r===a&&(s.current.scrollIntoView({behavior:"smooth"}),c(null))}),[a]),t.createElement("div",{ref:s},null!==e.title&&t.createElement("h1",null,e.title),t.createElement(C,{content:e.content}))},M=function(){var n=(0,t.useContext)(i),r=n.articles,e=n.articleIndex,o=(0,t.useContext)(p).openMenu,a=r[e];return t.createElement("div",{className:"Viewer",onClick:function(){o(!1)}},t.createElement("div",{className:"ArticleTitle"},a.title),t.createElement("div",{className:"ArticleSections",key:a.title},a.sections.map((function(n,r){return t.createElement(A,{key:r,index:r,section:n})}))))},O=function(){var n=(0,t.useContext)(p),r=n.isMenuOpen,e=n.openMenu;return t.createElement("button",{className:"Button",onClick:function(){e(!r)}},"Menu")},J=function(){return t.createElement("a",{className:"Button",href:"https://github.com/Avantgarde95/lets-react",target:"_blank",rel:"noopenner noreferrer"},"Code")},I=function(){return t.createElement("div",{className:"Header"},t.createElement(O,null),t.createElement("span",{className:"Title"},"Let's react"),t.createElement(J,null))},N=function(){return t.createElement("div",{className:"Content"},t.createElement(v,null),t.createElement(M,null))},T=function(){return t.createElement("div",{className:"App"},t.createElement(I,null),t.createElement(N,null))},D=e(2372),H=e(6778),L=e(6171),B=e(2650),R=e(6004),W=e(549),P=e(7133),Z=[{title:"Introduction",sections:a(D)},{title:"Web",sections:a(H)},{title:"Node.js",sections:a(L)},{title:"TypeScript",sections:a(B)},{title:"Webpack",sections:a(W)},{title:"React",sections:a(P)},{title:"SASS",sections:a(R)}],_=function(){return t.createElement(l,{articles:Z},t.createElement(m,null,t.createElement(T,null)))},V=document.getElementsByClassName("Root")[0];(0,o.render)(t.createElement(_,null),V)},2372:function(n){n.exports='[React](https://reactjs.org/)로 작성한 React 입문서입니다.\r\n\r\n- 각 프로그램 및 라이브러리의 역할이 무엇인지, 그리고 용어들이 무슨 의미인지 담았습니다.\r\n- 각 프로그램 및 라이브러리의 자세한 사용법은 담지 않았습니다. 설치, 세팅, 사용하는 방법은 공식 홈페이지, 인터넷 상의 자료들을 참고하세요.\r\n- 이 웹사이트도 여기서 소개한 도구들(TypeScript, Webpack, React, SASS)로 제작하였습니다.\r\n- 지식의 한계로 내용적으로 아직 부족한 부분들이 많아, 추가할 내용이 있다면 제안해주시면 매우 감사하겠습니다.\r\n\r\n상단의 "Menu" 버튼을 눌러 메뉴를 열 수 있습니다.\r\n'},6171:function(n){n.exports="# About\r\n- [Homepage](https://nodejs.org/)\r\n- JavaScript를 사용하여 서버 등 다양한 어플리케이션을 제작할 수 있게 해주는 프로그램입니다.\r\n- Python, JDK와 비슷하게 생각하면 됩니다.\r\n\r\n# Example\r\n- 컴퓨터에 Node.js를 설치하고 터미널을 열어 `node`를 실행해보세요.\r\n    ```JavaScript\r\n    Welcome to Node.js v14.16.0.\r\n    Type \".help\" for more information.\r\n    > 3 + 4\r\n    7\r\n    > 'abc' + 'def'\r\n    'abcdef'\r\n    >\r\n    ```\r\n\r\n# npm\r\n- Node.js는 [npm](https://www.npmjs.com/)이라는 패키지 관리자를 제공합니다. 웹사이트 제작에도 서버 제작에도 모두 사용할 수 있습니다.\r\n  - Python의 pip, Java의 maven과 비슷하게 생각하면 됩니다.\r\n- `package.json` 파일을 이용하여 프로젝트의 정보 및 사용할 라이브러리들을 지정해줄 수가 있습니다.\r\n- `npm install`을 실행하면 `package.json`을 읽어서 라이브러리들을 `node_modules` 아래에 설치해줍니다.\r\n    - `package-lock.json`이라는 파일이 자동 생성되며, 이는 사용자가 수정할 필요가 없습니다.\r\n    - `node_modules`의 크기는 일반적으로 **매우** 크기 때문에 git 저장소에 올리지 않는 것을 권장합니다.\r\n- `npm run ABC`를 실행하면 `package.json`의 `scripts`에서 `ABC`에 해당하는 문자열을 실행해줍니다. 빌드 스크립트를 만들 때 유용하게 사용할 수 있습니다.\r\n\r\n# Useful links\r\n- [package.json 알아보기](https://velog.io/@skyepodium/package.json)\r\n"},7133:function(n){n.exports="# About\r\n- [Homepage](https://reactjs.org/)\r\n- 복잡한 웹사이트를 쉽게 만들 수 있도록 해주는 **웹 프레임워크**입니다.\r\n- [AngularJS](https://angularjs.org/), [Vue.js](https://vuejs.org/v2/guide/index.html)와 같이 현재 가장 많이 쓰이는 웹 프레임워크 중 하나입니다.\r\n\r\n# Virtual DOM\r\n- 기존의 웹사이트 개발은 HTML로 DOM을 선언한 다음 JavaScript로 DOM을 직접 수정하는 방식으로 이루어집니다.\r\n    ```jsx\r\n    // HTML\r\n    <div class=\"App\">\r\n        <button class=\"Button1\">Hello</button>\r\n        <div class=\"Below\">\r\n            <button class=\"Button2\">World</button>\r\n            <button class=\"Button3\">Bye</button>\r\n        </div>\r\n    </div>\r\n\r\n    // JavaScript\r\n    const button1 = document.getElementsByClassName('Button1')[0];\r\n    button1.innerHTML = 'Yeah';\r\n\r\n    const button3 = document.getElementsByClassName('Button3')[0];\r\n    button3.innerHTML = 'Yeah';\r\n    ```\r\n    ![RealDOM](https://i.imgur.com/CLXJi1w.png)\r\n- 하지만 JavaScript로 DOM을 그때그때 수정하는 방식은 웹사이트가 복잡해지면 **성능 하락**을 가져올 수 있으며 **상태 관리**를 어렵게 만듭니다.\r\n- React는 DOM을 직접 수정하는 기존의 방식 대신, **[Virtual DOM](https://ryublock.tistory.com/41)**('가상의' DOM)이라는 개념을 도입하여 이 문제를 해결합니다.\r\n  - 사용자는 실제 DOM을 **직접 조작하지 않습니다**.\r\n  - 사용자가 virtual DOM을 업데이트하면, React가 virtual DOM에서 바뀐 부분들을 찾아서 실제 DOM에 알아서 반영해줍니다.\r\n    ![VirtualDOMAbout](https://i.imgur.com/1EmaTDH.png)\r\n- 사용자는 JavaScript를 이용하여 **component**들을 정의하고 component의 tree를 만들어서 React에게 넘겨줍니다. 각각의 component들은 **속성**(props)과 **상태**(state)를 가지고 있어, 만약 어떤 component의 속성이나 상태가 변경되면 React가 해당 component를 자동으로 다시 그려줍니다.\r\n    ```jsx\r\n    // Declare a component\r\n    const App = props => {\r\n        const text1 = props.wow ? 'Hello' : 'Yeah';\r\n        const text3 = props.wow ? 'Bye' : 'Yeah';\r\n\r\n        return (\r\n            <div>\r\n                <button>{text1}</button>\r\n                <div>\r\n                    <button>World</button>\r\n                    <button>{text3}</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Version 1\r\n    <App wow={true}/>\r\n\r\n    // Version 2\r\n    <App wow={false}>\r\n    ```\r\n    ![VirtualDOMCompare](https://i.imgur.com/7yXRuHm.png)\r\n\r\n# Component\r\n- State\r\n- Props\r\n- Lifecycle\r\n\r\n# Context\r\n- Context\r\n- Provider\r\n\r\n# JSX\r\n- `React.createElement`\r\n- JSX, TSX 문법\r\n"},6004:function(n){n.exports="# About\r\nUnder construction\r\n"},2650:function(n){n.exports="# About\r\n- [Homepage](https://www.typescriptlang.org/)\r\n- JavaScript 기반의 언어로, JavaScript의 문법을 확장하여 C++, Java처럼 **자료형(type)을 명시하고** 체크하여 견고한 프로그래밍이 가능하도록 한 언어입니다.\r\n    ```typescript\r\n    // JavaScript\r\n    function addInts(x, y) {\r\n        return x + y;\r\n    }\r\n\r\n    // TypeScript\r\n    function addInts(x: number, y: number): number {\r\n        return x + y;\r\n    }\r\n    ```\r\n- JavaScript의 기본 자료형뿐만 아니라, 자료형의 조합을 통한 복잡한 자료형 생성도 지원합니다.\r\n    ```typescript\r\n    // number이거나 string\r\n    const x: number | string = 3;\r\n\r\n    // 'A', 'B', or 'C' ('D'를 넣으면 에러)\r\n    const y: 'A' | 'B' | 'C' = 'A';\r\n\r\n    // 키는 number, 값은 boolean인 map 형태의 객체\r\n    const z: {[key: number]: boolean} = {3: true, 4: false};\r\n    ```\r\n- 웹 브라우저는 일반적으로 JavaScript만을 지원합니다. 따라서 TypeScript 컴파일러(tsc)를 이용하여 JavaScript로 변환하여 사용해야 합니다.\r\n  `tsconfig.json` 파일을 이용하여 컴파일러에 여러 옵션(ex. 어떤 버전의 JavaScript로 변환할 것인지)을 줄 수가 있습니다.\r\n    ```jsonc\r\n    {\r\n        \"compilerOptions\": {\r\n            \"target\": \"es3\", // Target JavaScript version.\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n    ```\r\n\r\n# Example\r\n`npm install -g typescript`를 사용하여 TypeScript 컴파일러를 설치하고, 아래 코드를 \"Example.ts\" 파일로 저장하고 터미널에서 `tsc Example.ts`를 실행해보세요.\r\n\r\n```typescript\r\nfunction addInts(x: number, y: number): number {\r\n    return x + y;\r\n}\r\n```\r\n\r\n`Example.js`가 생성됩니다.\r\n\r\n```javascript\r\nfunction addInts(x, y) {\r\n    return x + y;\r\n}\r\n```\r\n\r\n만약 아래와 같이 함수에 잘못된 자료형의 값을 대입한다면 컴파일 에러가 납니다.\r\n\r\n```typescript\r\nfunction addInts(x: number, y: number): number {\r\n    return x + y;\r\n}\r\n\r\naddInts(3, 'abc'); // Wrong code!\r\n```\r\n\r\n# Useful links\r\n- [TypeScript 공식 문서](https://www.typescriptlang.org/docs/)\r\n"},6778:function(n){n.exports='# About\r\n\r\n웹사이트를 구성하는 기본적인 요소들에 대하여 담았습니다.\r\n\r\n# HTML / CSS / JS\r\n\r\n웹사이트는 일반적으로 아래의 세 가지 언어로 구성됩니다.\r\n\r\n- HTML: 웹사이트의 구조(layout)를 표현합니다.\r\n    ```html\r\n    <div class="App">\r\n        <span class="About">Hello!</span>\r\n        <button class="Run">Click</button>\r\n    </div>\r\n    ```\r\n- CSS: 웹사이트의 스타일(ex. 색깔, 크기)을 결정합니다.\r\n    ```css\r\n    .About {\r\n        color: #0000ff;\r\n    }\r\n    ```\r\n- JavaScript: 웹사이트의 동작(ex. 상호작용, DOM 변경)을 표현합니다.\r\n    ```javascript\r\n    const button = document.getElementsByClassName(\'Run\')[0];\r\n\r\n    button.addEventListener(\'click\', () => {\r\n        alert(\'Yeah!\');\r\n    });\r\n    ```\r\n\r\n# How website works\r\n\r\n- 사용자(클라이언트)가 서버에 웹사이트를 요청하면, 서버는 웹사이트의 HTML 파일을 보내 줍니다.\r\n- 웹 브라우저는 HTML을 읽어 DOM(Document Object Model) tree를 생성합니다.\r\n  - 중간에 이미지, JS, CSS 등 파일들의 링크를 만나면 해당 파일들을 다운로드 / 실행합니다.\r\n- 웹 브라우저는 이들로부터 render tree를 만들어 화면에 웹사이트를 그립니다.\r\n\r\n# Example\r\n\r\n아래는 간단한 웹사이트입니다. .html 파일로 저장한다음 실행하면 텍스트와 버튼이 있는 간단한 웹사이트가 나타납니다.\r\n\r\n```html\r\n<html>\r\n<head>\r\n    <title>제목</title>\r\n\r\n    <style type="text/css">\r\n        .App {\r\n            width: 100px;\r\n            border: 1px solid #000000;\r\n        }\r\n\r\n        .About {\r\n            color: #0000ff;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class="App">\r\n        <span class="About">Hello!</span>\r\n        <button class="Run">Click</button>\r\n    </div>\r\n\r\n    <script type="text/javascript">\r\n        const button = document.getElementsByClassName(\'Run\')[0];\r\n\r\n        button.addEventListener(\'click\', () => {\r\n            alert(\'Yeah!\');\r\n        });\r\n    <\/script>\r\n</body>\r\n</html>\r\n```\r\n\r\nCSS와 JS 코드를 별도의 파일에 저장하고 싶은 경우, 아래와 같이 하면 됩니다.\r\n\r\n```html\r\n<html>\r\n<head>\r\n    <title>제목</title>\r\n    <link rel="stylesheet" type="text/css" href="MyCSSCode1.css">\r\n    <link rel="stylesheet" type="text/css" href="MyCSSCode2.css">\r\n</head>\r\n<body>\r\n    <div class="App">\r\n        <span class="About">Hello!</span>\r\n        <button class="Run">Click</button>\r\n    </div>\r\n\r\n    <script type="text/javascript" src="MyJSCode1.js"><\/script>\r\n    <script type="text/javascript" src="MyJSCode2.js"><\/script>\r\n</body>\r\n</html>\r\n```\r\n\r\n이 때 `<script>...<\/script>`는 `<head>...</head>`에 넣는 경우도 있고, 위의 예시처럼 `<body>...</body>`의 **끝에** 넣는 경우도 있습니다. [어떤 차이](https://webdir.tistory.com/514)가 있을까요??\r\n\r\n# Keywords\r\n많이 등장하는 키워드들입니다.\r\n\r\n- HTML: DOM, head, body, alt, [event 작동 방식](https://joshua1988.github.io/web-development/javascript/event-propagation-delegation/), ...\r\n- CSS: Margin, padding, border, outline, box model, flexbox, grid, media query, keyframes, transition, ...\r\n- JavaScript: 호이스팅(hoisting), **[var vs const vs let](https://medium.com/@yeon22/javascript-var-let-const의-차이점-9fab5c264c9c)**, **[this](https://nykim.work/71)**, [prototype-based OOP](https://developer.mozilla.org/ko/docs/Web/JavaScript/Inheritance_and_the_prototype_chain), [function vs 화살표 함수](https://velog.io/@modolee/javascript-function-vs-arrow-function), closure, module, window 객체, document 객체, ...\r\n- Website: 웹 접근성(Web accessibility), **반응형 웹(responsive web)**, AJAX, ...\r\n\r\n# Useful links\r\n- [W3Schools](https://www.w3schools.com/): 많은 예시 코드들이 있으며 그것들을 직접 실행해 볼 수 있어 유용합니다.\r\n- [Can I use](https://caniuse.com/): 웹 브라우저의 종류 및 버전마다 지원하는 기능들이 서로 다릅니다. 내가 사용하고자 하는 HTML, CSS, JS의 기능이 특정 웹 브라우저에서 지원되는지 이 사이트에서 확인할 수 있습니다.\r\n'},549:function(n){n.exports="# About\r\n- [Homepage](https://webpack.js.org/)\r\n- 웹사이트가 많은 코드와 리소스 파일들로 이루어져 있다고 합시다. 이들의 의존성을 분석하여 웹 브라우저 등에서 사용할 수 있도록 '한 세트'로 묶어주는 (i.e '번들링', '패키징') 라이브러리입니다.\r\n  ```\r\n  A.js ----+\r\n  B.js     |\r\n  C.ts     |\r\n           |\r\n  M.css    +-------\x3e bundle.js, bundle.css, resources\r\n  N.css    |\r\n           |\r\n  X.png    |\r\n  Y.jpg ---+\r\n  ```\r\n- \"webpack.config.js\"를 사용하여 다양한 설정들을 할 수 있습니다.\r\n  - Paths\r\n  - [Loader](https://joshua1988.github.io/webpack-guide/concepts/loader.html)\r\n  - [Plugin](https://joshua1988.github.io/webpack-guide/concepts/plugin.html)\r\n  - [Source map](https://joshua1988.github.io/webpack-guide/devtools/source-map.html)\r\n  - ...\r\n- [gulp](https://gulpjs.com/), [rollup](https://rollupjs.org/guide/en/) 등의 대체제들도 존재합니다.\r\n\r\n# Loader\r\n- 각 파일들을 읽고 처리해주는 역할을 합니다.\r\n  예컨대 TypeScript 파일들을 [ts-loader](https://www.npmjs.com/package/ts-loader)를 사용하여 처리하고자 한다면 아래와 같이 설정하면 됩니다.\r\n    ```javascript\r\n    module.exports = (env, argv) => {\r\n        return {\r\n            ...,\r\n            module: {\r\n                rules: [\r\n                    // .ts 또는 .tsx로 끝나는 파일들은 ts-loader를 사용.\r\n                    // (JavaScript 정규 표현식 참고)\r\n                    { test: /\\.tsx?$/, use: 'ts-loader' }\r\n                ]\r\n            }\r\n        };\r\n    }\r\n    ```\r\n\r\n# Plugin\r\n- Plugin을 사용하여 추가적인 동작들을 수행할 수 있습니다.\r\n  예컨대 [clean-webpack-plugin](https://www.npmjs.com/package/clean-webpack-plugin)을 사용하여 빌드 전에 이전 결과물들을 지우도록 할 수 있습니다.\r\n    ```javascript\r\n    const { CleanWebpackPlugin } = require('clean-webpack-plugin');\r\n\r\n    module.exports = (env, argv) => {\r\n        return {\r\n            ...,\r\n            plugins: [\r\n                new CleanWebpackPlugin()\r\n            ]\r\n        };\r\n    }\r\n    ```\r\n\r\n# Source map\r\n- Webpack으로 코드를 빌드하고 나면 코드가 하나로 합쳐지고 설정에 따라 [난독화, 압축화](https://12bme.tistory.com/357)가 됩니다.\r\n  만약 웹사이트에서 에러가 발생했을 때, 웹 브라우저가 원본 코드가 아닌 결과 코드의 줄을 알려주므로 디버깅이 힘들어집니다.\r\n- Source map은 원본 코드와 결과 코드를 연결하여 디버깅 작업을 쉽게 해줍니다.\r\n  Chrome 등의 웹 브라우저들은 source map을 인식하여, 만약 에러가 발생하면 원본 코드의 해당하는 줄을 자동으로 찾아줍니다.\r\n- 별도의 파일(.map)로 생성할 수도 있으며, 결과 코드 내에 삽입할 수도 (inline) 있습니다.\r\n\r\n# Caching\r\n- 웹 브라우저는 웹 사이트를 빠르게 로딩하고 트래픽을 줄이기 위하여 파일들을 **캐싱**합니다.\r\n- 웹 사이트를 수정하여 파일의 내용이 바뀌었어도, 파일의 이름이 이전과 동일하면 웹 브라우저는 때때로 서버에서 새 파일을 다운받지 않고 캐싱해둔 파일을 그대로 사용합니다.\r\n- Webpack에는 결과 파일의 이름에 해시(hash)값을 삽입하여 웹 브라우저가 새로운 파일을 사용하도록 강제하는 [유용한 기능](https://webpack.js.org/guides/caching/)이 존재합니다.\r\n    ```javascript\r\n    module.exports = (env, argv) => {\r\n        return {\r\n            output: {\r\n                filename: '[name].[contenthash].js'\r\n            }\r\n        };\r\n    }\r\n    ```\r\n  예를 들어 \"main.js\" 대신 \"main.c5ff92a7652991cb5717.js\"와 같이 파일이 생성됩니다.\r\n\r\n# Example\r\n\r\n이 웹사이트도 Webpack을 이용하여 제작하였습니다.\r\n웹사이트 코드를 다운받고 `npm install`로 라이브러리들을 설치한 후 `npm run debug` 또는 `npm run build`를 실행하면 \"docs\" 폴더에 결과 파일들이 생성됩니다.\r\n"}},e={};function t(n){var o=e[n];if(void 0!==o)return o.exports;var a=e[n]={exports:{}};return r[n](a,a.exports,t),a.exports}t.m=r,n=[],t.O=function(r,e,o,a){if(!e){var c=1/0;for(l=0;l<n.length;l++){e=n[l][0],o=n[l][1],a=n[l][2];for(var s=!0,i=0;i<e.length;i++)(!1&a||c>=a)&&Object.keys(t.O).every((function(n){return t.O[n](e[i])}))?e.splice(i--,1):(s=!1,a<c&&(c=a));s&&(n.splice(l--,1),r=o())}return r}a=a||0;for(var l=n.length;l>0&&n[l-1][2]>a;l--)n[l]=n[l-1];n[l]=[e,o,a]},t.n=function(n){var r=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(r,{a:r}),r},t.d=function(n,r){for(var e in r)t.o(r,e)&&!t.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:r[e]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},function(){var n={179:0};t.O.j=function(r){return 0===n[r]};var r=function(r,e){var o,a,c=e[0],s=e[1],i=e[2],l=0;for(o in s)t.o(s,o)&&(t.m[o]=s[o]);if(i)var u=i(t);for(r&&r(e);l<c.length;l++)a=c[l],t.o(n,a)&&n[a]&&n[a][0](),n[c[l]]=0;return t.O(u)},e=self.webpackChunklets_react=self.webpackChunklets_react||[];e.forEach(r.bind(null,0)),e.push=r.bind(null,e.push.bind(e))}();var o=t.O(void 0,[148],(function(){return t(9320)}));o=t.O(o)}();